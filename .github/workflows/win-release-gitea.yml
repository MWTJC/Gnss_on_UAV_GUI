defaults:
  run:
    shell: powershell

name: gitea-CI-sparrow-poetry
on:
  push:
    tags:
      - "v*"  # 以v开头

jobs:
  poetry-src-regen:
    runs-on: windows-amd64
    env:
      PYTHONIOENCODING: 'utf-8'
      PYTHONUTF8: 1
      GITEA_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      ACTIONS_URL: https://mwtjc.online:14086/
      GITEA_API_URL: https://mwtjc.online:14086/api/v1/
      APP_FOLDER_NAME: 'PySideApp'
    steps:
      - name: 检出repo
        uses: ${{ env.ACTIONS_URL }}actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的git历史记录

      - name: 取得hash标记符
        uses: ${{ env.ACTIONS_URL }}actions/go-hashfiles@v0.0.1
        id: hash-go
        with:
          patterns: |-
            py312-win.lock
            pyproject.toml

      - name: 环境安装
        run: |
          pdm use 3.12
          pdm install --lockfile=py312-win.lock
          pdm list
          pdm info

      - name: pyui资源更新
        working-directory: ${{ env.APP_FOLDER_NAME }}\scripts
        run: pdm run regen_ui.py

      - name: 构建前测试
        run: pdm run test

      - name: 取得缓存 nuitka
        uses: ${{ env.ACTIONS_URL }}actions/cache/restore@v4
        with:
          path: |
            .\dist
          key: dist-${{ steps.hash-go.outputs.hash }}

      - name: Nuitka构建
        run: pdm run build

      - name: 缓存 nuitka
        uses: ${{ env.ACTIONS_URL }}actions/cache/save@v4
        with:
          path: |
            .\dist
          key: dist-${{ steps.hash-go.outputs.hash }}

      - name: 压缩7z
        run: 7z.exe a -t7z -m0=LZMA2 -mmt=on -mx9 -mqs=on -bsp2  -mtc=on -mta=on ".\dist7z.7z" ".\dist\${{ env.APP_FOLDER_NAME }}.dist"

      - name: 文件信息
        run: |
          # 获取短 commit hash
          $commit = git rev-parse --short HEAD
          # 获取文件大小（以 MB 为单位）
          $size = [math]::Round((Get-Item "dist7z.7z").length / 1MB, 2)
          echo FILE_SIZE: "${size}MB"

      # 生成 changelog
      - name: 生成 changelog
        run: |
          $CURRENT_TAG = $env:GITHUB_REF -replace 'refs/tags/', ''
          $PREVIOUS_TAG = git tag -l 'v*' --sort=-v:refname | Select-String -Pattern "^${CURRENT_TAG}$" -Context 0,1 | ForEach-Object { $_.Context.PostContext[0] }
          
          $CHANGELOG = @"
          # 🎉 Release $CURRENT_TAG
          
          ## 📝 Changelog
          
          "@
          
          if ($PREVIOUS_TAG) {
            $CHANGELOG += "Changes between $PREVIOUS_TAG and $CURRENT_TAG:`n`n"
          } else {
            $CHANGELOG += "Initial release $CURRENT_TAG:`n`n"
          }
          
          # 获取不同类型的提交
          $FEATURES = git log --pretty=format:"- ✨ %s (%h) by @%an" "${PREVIOUS_TAG}..${CURRENT_TAG}" --grep="^feat"
          $FIXES = git log --pretty=format:"- 🐛 %s (%h) by @%an" "${PREVIOUS_TAG}..${CURRENT_TAG}" --grep="^fix"
          $DOCS = git log --pretty=format:"- 📚 %s (%h) by @%an" "${PREVIOUS_TAG}..${CURRENT_TAG}" --grep="^docs"
          $OTHER = git log --pretty=format:"- 🔧 %s (%h) by @%an" "${PREVIOUS_TAG}..${CURRENT_TAG}" --invert-grep --grep="^(feat|fix|docs|ci)"
          
          # 组合内容
          $CONTENT = @"
          
          ### ✨ 特性
          
          $FEATURES
          
          ### 🐛 Bug修复
          
          $FIXES
          
          ### 📚 文档
          
          $DOCS
          
          ### 🔧 其他
          
          $OTHER
          "@
          
          # 写入文件
          $CHANGELOG + $CONTENT | Out-File -FilePath "changelog.md" -Encoding UTF8


      - name: PreRelease
        uses: ${{ env.ACTIONS_URL }}actions/gitea-release-action@v1
        with:
          files: |
            dist7z.7z
          body_path: changelog.md
          prerelease: true
          md5sum: true



